using AbstractClassExampleProblem;
using ConstructorExampleProblem;
using CopyConstructorProblem;
using PartialClassExampleProblem;
using PrivateConstructorProblem;
using SealedClassProblem;
using StaticClassProblem;
using StaticConstructorProblem;
using AccessModifierExample;
using PrivateMemberAccessModifiers;
using ProtectedExampleAccessModifiers;
using InternalClassExampleAccessModifiers;
using PrivateProtectedExampleProblem;
using FieldTypesProblem;
using PropertiesBasicExampleProblem;
using PropertiesRequiredProblem;
using VirtualPropertyProblem;
using StaticPropertyProblem;
using HiddenPropertiesProblem;
using InterfacePropertyProblem;
using PartialMethodExample;
using ObjectInitializerProblem;
using AbstractionExampleProblem;
using EncapsulationProblem;
using InheritanceProgram;
using OOPs.OOPS_Concept.Day___06.PolyMorphism;

//AbstractProgram.Solution();
//new PartialClassExample().Solution();
//MainClass.Solution();
//StaticClass.Solution();
//ConstructorExampleProblem.MainClass.Solution();
//StaticConstructorMain.Solution();
//MainPrivateConstructor.Solution();
//MainCopyConstructor.Solution();
//MainPublicClass.Solution();
//MainPrivateMethod.Solution();
//ProtectedExampleMain.Solution();
//MainInternalClass.Solution();
//PrivateProtectedProgram.MainMethod();
//MainProgramFieldTypes.Solution();
//PropertiesMain.Solution();
//MainPropertiesRequired.Solution();
//VirtualProperty.Solution();
//StaticProperty.Solution();
//TestHiddenProperties.Solution();
//MainInterfaceProperty.Solution();
//MainPartialMetho.d.Solution();
//ObjectInitializer.Solution();
//AbstractionExample.Solution();
//EncapsulationProgram.Solution();
//MainInheritanceClass.Solution();
MainPolymorphism.Solution();